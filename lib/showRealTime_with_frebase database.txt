import 'package:firebase_database/firebase_database.dart';
import 'package:firebase_database/ui/firebase_animated_list.dart';

final DatabaseReference _databaseRef =
      // ignore: deprecated_member_use
      FirebaseDatabase.instance.reference().child('users');

SingleChildScrollView(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            carouselSlider(),
            // ignore: sized_box_for_whitespace

            Container(
              margin: EdgeInsets.only(left: 12, right: 12),
              child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const Text(
                      "New Products",
                      style:
                          TextStyle(fontSize: 18, fontWeight: FontWeight.w500),
                    ),
                    TextButton(
                      onPressed: (){
                        Navigator.push(context, MaterialPageRoute(builder: (context){
                          return AppProduct();
                        }));
                      },
                      child: const Text(
                        "See More",
                        style:
                            TextStyle(fontSize: 18, fontWeight: FontWeight.w500,color: Colors.blue),
                      ),
                    )
                  ]),
            ),
            Container(
              height: 400.0,
              child: FirebaseAnimatedList(
                query: _databaseRef,
                shrinkWrap: true,
                itemBuilder: (context, snapshot, animation, index) {
                  Map Users = snapshot.value as Map;
                  return InkWell(
                    onTap: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) => DetailApp(
                                  Users,
                                )),
                      );
                    },
                    child: SizedBox(
                      width: double.infinity,
                      height: MediaQuery.of(context).size.height / 2.2,
                      child: Padding(
                        padding: EdgeInsets.all(10.0),
                        child: Card(
                          shape: const RoundedRectangleBorder(
                            borderRadius: BorderRadius.only(
                                topLeft: Radius.circular(15),
                                topRight: Radius.circular(15)),
                          ),
                          color: Colors.white,
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              ClipRRect(
                                borderRadius: const BorderRadius.only(
                                  topLeft: Radius.circular(15),
                                  topRight: Radius.circular(15),
                                ),
                                child: CachedNetworkImage(
                                  imageUrl: Users['imageUrl'],
                                  placeholder: (context, url) => Center(
                                      child: CircularProgressIndicator()),
                                  errorWidget: (context, url, error) =>
                                      const Icon(Icons.error),
                                  width: double.infinity,
                                  height:
                                      MediaQuery.of(context).size.height / 3.3,
                                  fit: BoxFit.cover,
                                ),
                              ),
                              Padding(
                                padding: EdgeInsets.symmetric(
                                    horizontal: 10, vertical: 10),
                                child: Column(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      Users['name'],
                                      style: const TextStyle(fontSize: 18),
                                    ),
                                    Text(
                                      '\$${Users['price'].toString()}',
                                      style: const TextStyle(
                                          color: Colors.green, fontSize: 18),
                                    ),
                                  ],
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),